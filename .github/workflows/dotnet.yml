name: Build and deploy ASP.Net Core app to Azure Web App - weatherman

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
          include-prerelease: false

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/weatherman

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: weathermanapp
          path: ${{env.DOTNET_ROOT}}/weatherman

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: 'production'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    defaults:
      run:
        shell: bash
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
         tf_actions_version: 0.14.8
         tf_actions_subcommand: 'fmt'
         tf_actions_working_dir: './Infrastructure'      
    
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
         tf_actions_version: 0.14.8
         tf_actions_subcommand: 'init'
         tf_actions_working_dir: './Infrastructure'
      env:
        TF_VAR_environment: 'dev'
        TF_VAR_weatherApiKey: ${{ secrets.WEATHER_API_KEY }}
    
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
         tf_actions_version: 0.14.8
         tf_actions_subcommand: 'validate'
         tf_actions_working_dir: './Infrastructure'
      env:
        TF_VAR_environment: 'dev'
        TF_VAR_weatherApiKey: ${{ secrets.WEATHER_API_KEY }}
        
    
    - name: 'Terraform plan'
      uses: hashicorp/terraform-github-actions@master
      with:
         tf_actions_version: 0.14.8
         tf_actions_subcommand: 'plan'
         tf_actions_working_dir: './Infrastructure'
      env:
        TF_VAR_environment: 'dev'
        TF_VAR_weatherApiKey: ${{ secrets.WEATHER_API_KEY }}

    - name: 'Terraform Apply'
      if: github.ref == 'refs/head/main'
      uses: hashicorp/terraform-github-actions@master
      with:
         tf_actions_version: 0.14.8
         tf_actions_subcommand: 'applya'
         tf_actions_working_dir: './Infrastructure'
      env:
        TF_VAR_environment: 'dev'
        TF_VAR_weatherApiKey: ${{ secrets.WEATHER_API_KEY }}
    
# Commented the deployment to finish the infrastruture setup
  # deploy:
  #   runs-on: windows-latest
  #   needs: terraform
  #   environment:
  #     name: 'production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: weathermanapp

  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'dev-weatherMan'
  #         slot-name: 'production'
  #         publish-profile: ${{ secrets.PublishProfile }}
  #         package: .
